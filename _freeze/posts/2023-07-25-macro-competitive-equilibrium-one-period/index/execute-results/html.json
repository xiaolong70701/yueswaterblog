{
  "hash": "0c935723d4dca7a5adab307489aceef8",
  "result": {
    "markdown": "---\ntitle: \"競爭均衡\"\nimage: macro preview.png\nlang: en\ndescription: |\n    藉由消費者與生產者在市場上的互動，分析互動如何決定經濟體系中的資源配置。\ndate: \"2023-07-25\"\ndraft: FALSE\ncitation:\n  url: https://yueswater.netlify.app/posts/2023-07-25-macro-competitive-equilibrium-one-period/\ncategories: [macroeconomics]\n---\n\n我們考慮一個封閉經濟體系(closed economy)模型，其中由眾多家戶與廠商組成，分別描述現實生活中的消費者與生產者，並給予以下假設：\n\n- 家戶(household)：數量眾多的同質家⼾單位，且\n    - 存在相同的偏好，⾯對相同的限制，因此只需考慮⼀個代表性家庭，分析此家庭如何選擇消費與勞動\n    - ⾯對給定的實質⼯資，決定⼯作時長，以及消費多少單位商品\n\n- 廠商(firm)：數量眾多的⽣產者，\n    - 有相同的⽣產技術，與相同的資本數量，因此只需考慮⼀個代表性廠商，分析此廠商的⾏為\n    - 在給定的⼯資下，決定⽣產多少單位的商品與雇⽤多少單位的勞動\n\n家戶消費與勞動的選擇，連同廠商⽣產與勞動雇⽤的決策，共同決定此⼀經濟社會的\n資源配置。\n\n## 封閉經濟體系\n\n討論競爭均衡之前，我們必須先了解市場上的一些特性與規則。以下我們將針對市場結清條件與 Walras' Law 進行說明。\n\n### 市場清算條件(Market Clearing Conditions)\n\n首先我們要釐清一個市場中的價格是如何決定。一般來說，在沒有特別假設或其他因素影響下，市場價格係係由市場中的供需雙方共同決定。換言之，市場中的消費者與生產者彼此給出願付價格(willingness to pay)與願收價格(willingness to sell)，互相交流最終給出一個共識，這個共識即是市場價格。\n\n在我們的模型中，存在兩個重要的市場：\n\n- 勞動市場均衡：企業雇用員工形成對勞動的需求，家庭提供勞動服務形成勞動供給，供需的互動決定均衡的工資率與勞動量，即 \n$$\nn^{d} = n^{s}\n$$\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 其中 $n$ 代表勞動，上標 $d$ 與 $s$ 分別代表需求(demand) 與供給(supply)。\n\n- 商品市場均衡：企業生產形成對商品的供給，家庭消費形成商品需求，供需的互動決定均衡的商品價格與數量，即 \n$$\nX^{d} = X^{s}\n$$\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 其中 $X$ 代表市場中某一項特定產品。\n\n因此在競爭均衡中，均衡價格使市場達到清算。\n\n### Walras' Law\n\n當代總體分析的基本假設是，經濟社會中所有市場都達成均衡的狀態，稱為一般均衡或全面均衡(general equilibrium)。\n\n進行一般均衡時，我們最常用的一個概念稱之為 Walras' Law：假設市場總數為 $n$ 個，當其中 $n-1$ 個市場達成均衡時，第 $n$ 個市場必定同時達成均衡。因此，若勞動市場達成均衡，商品市場將自動達成均衡，反之亦然(vice versa)。 \n\n注意到 Walras' Law 並不意味著市場必然結清，但若商品市場結清，則勞動市場必然結清，反之亦然。因此，兩個市場的結清條件只要其中一式成立即已足夠。\n\n## 靜態模型的競爭均衡\n\n靜態模型的競爭均衡(competitive equilibrium, CE)是指我們考慮的經濟社會由眾多同質的消費者及廠商所組成，在完全競爭的商品市場及勞動市場互動，在外生給定的技術水準($A$)及資本存量($K$)下，要達成經濟世界的全面均衡（或稱競爭均衡），需要同時滿足以下三組條件：\n\n1. 消費者效用極大：消費者在給定價格下，能夠最大化其效用，即從有限的預算中選擇最佳的消費組合。\n\n2. 廠商利潤極大：廠商在給定價格下，能夠最大化其利潤，即最大化收入減去成本。\n\n3. 市場結清：在均衡狀態下，商品市場與勞動市場都達到供求平衡，不會出現供過於求或求過於供的情況。\n\n注意到在 CE 下，消費者和廠商均為價格接受者而非價格制定者，市場能夠自發達到均衡狀態，所有資源得以最有效率地配置。\n\n### 消費者效用極大\n\n在給定實質工資與非勞動所得 $\\{w, \\pi\\}$之下，均衡消費及均衡勞動必須滿足消費者最適選擇的一階條件與與算限制，代表消費者對於消費與休閒兩者的主觀替代率(MRS)要與市場上的客觀替代率（也就是實質工資）相等，即\n$$\n\\frac{u_{l}(c, l)}{u_{c}(c, l)} = \\text{MRS}_{l, c} = w\n$$\n\n此外仍要滿足消費者的預算限制式：\n$$\nc = w(h - l) + \\pi\n$$\n\n其中 $h$ 為代表性消費者所能支配的時間。上述兩個條件決定消費者的消費需求 $c$ 與勞動供給 $n^{s}$。注意到對消費者⽽⾔，非勞動所得是外⽣變數，但對總體經濟⽽⾔其為內⽣變數，必須在體系內決定。\n\n### 廠商利潤極大\n\n在給定 $\\{w, A, K\\}$ 下，均衡勞動也必須滿⾜廠商最適選擇的⼀階條件，即\n$$\nAF_{n}(k, n) - w \\overset{*}{=} 0 \\Longleftrightarrow \\text{MPN}(k, n) = w\n$$\n\n上式決定廠商的勞動需求 $n^{d}$ 及商品供給 ${y}$。根據定義，均衡利潤是\n$$\n\\pi = AF(k, n) - wn\n$$\n這也是內⽣變數。\n\n### 市場結清\n\n在競爭均衡中，我們要求商品市場與勞動市場必須結清，即要求市場⼯資率 $w$ 必須保證市場供需平衡。\n\n- 商品市場：$c = y$\n\n- 勞動市場：$n^{d} = n^{s}$\n\n以上兩式又稱市場結清條件(market-clearing conditions)。\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nfrom sympy import *\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# 設定數值\np1 = 1\np2 = 2\nI = 30\na = 0.5\nx1,x2,k = symbols('x1,x2,k')\n\n# 建立效用函數\nf = (x1**(a))*(x2**(1-a))\n# 建立預算限制式\ng = p1*x1 + p2*x2 - I\n# 建立 Lagragian equation\nL = f-k*g\n# 求導\ndx1 = diff(L, x1)\ndx2 = diff(L,x2)\ndk = diff(L,k)\n\n# 求解\nm = solve([dx1,dx2,dk],[x1,x2,k])   \nx1 = m[0][0]\nx2 = m[0][1]\nk = m[0][2]\nf2 = (x1**(a))*(x2**(1-a))\n\n# 繪圖\nplt.clf() # 清除先前的圖片\n\n# 設定 x, y 軸\nplt.xlabel(r\"$x_{1}$\",fontsize=10)\nplt.ylabel(r\"$x_{2}$\",fontsize=10)\n\n# 設定圖片寬度\nplt.xlim(0,(I/p1)*1.2)\nplt.ylim(0,(I/p2)*1.2)\n\n# 建立圖片\nz1=np.linspace(0,(I/p1),200).reshape(-1,1) \nz2=-p1/p2*z1+(I/p2)\nz3=np.linspace(0.1,(I/p1),200).reshape(-1,1) \nz4=(f2/z3**a)**(1/(1-a))\n\n# 標註文字\nplt.annotate(r'$\\frac{I}{p_{x}}$', \n             xy = (30, 0), \n             xytext=(30, 1),\n             fontsize = 12)\nplt.annotate(r'$\\frac{I}{p_{y}}$', \n             xy = (0, 15), \n             xytext=(1, 16),\n             fontsize = 12)\nplt.annotate('Optimal solution', \n             xy = (15, 7.5), \n             xytext=(15.5, 8),\n             fontsize = 9)\n\n# 設定圖例\nplt.plot(z1,z2,\n         label = 'Budget Constraint',\n         color = 'Black')\nplt.plot(z3,z4,\n         label = 'Utility Function',\n         color = 'Gray')\nplt.legend(loc='upper right')\n\n# 建立最適點\nplt.scatter(x1,x2, color = \"red\")\n\n# 顯示圖片\nax = plt.subplot(111)\nax.spines[['right', 'top']].set_visible(False) # 移除上邊界與右邊界\nplt.legend(frameon=False) # 移除圖例邊界\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-1.png){width=585 height=434}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}